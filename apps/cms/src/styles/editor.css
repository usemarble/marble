/* Color picker full width */
.react-colorful {
  width: 100% !important;
}

/* Slash command menu theme */
[data-theme="slash-command"] {
  width: max(16rem, min(100%, 48rem));
  max-width: 90vw;
}

/* Slash command menu scrollbar - thin grey aesthetic */
.slash-command-scrollbar::-webkit-scrollbar {
  width: 4px !important;
}

.slash-command-scrollbar::-webkit-scrollbar-track {
  background: hsl(var(--muted) / 0.3) !important;
  border-radius: 2px !important;
}

.slash-command-scrollbar::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground) / 0.5) !important;
  border-radius: 2px !important;
}

.slash-command-scrollbar::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.7) !important;
}

.slash-command-scrollbar::-webkit-scrollbar-button {
  display: none !important;
  height: 0 !important;
  width: 0 !important;
}

/* Firefox scrollbar */
.slash-command-scrollbar {
  scrollbar-width: thin !important;
  scrollbar-color: hsl(var(--muted-foreground) / 0.5) hsl(var(--muted) / 0.3) !important;
}

.ProseMirror .is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(from var(--muted-foreground) h s l / 0.5);
  pointer-events: none;
  height: 0;
  font-size: 16px;
}
.ProseMirror .is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(from var(--muted-foreground) h s l / 0.5);
  pointer-events: none;
  height: 0;
}

/* Custom image styles */
.ProseMirror img {
  transition: filter 0.1s ease-in-out;

  &:hover {
    cursor: pointer;
    filter: brightness(90%);
  }

  &.ProseMirror-selectednode {
    outline: 3px solid #5abbf7;
    filter: brightness(90%);
  }
}

/* Figure and caption styles */
.ProseMirror figure {
  margin: 1.5rem 0;
  display: block;
}

.ProseMirror figure img {
  display: block;
  width: 100%;
  margin: 0;
}

.ProseMirror figure figcaption {
  margin-top: 0.5rem;
  font-size: 0.875rem;
  color: hsl(var(--muted-foreground));
  font-style: italic;
  text-align: center;
}

.img-placeholder {
  position: relative;

  &:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 3px solid var(--novel-stone-200);
    border-top-color: var(--novel-stone-800);
    animation: spinning 0.6s linear infinite;
  }
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}

/* Custom TODO list checkboxes â€“ shoutout to this awesome tutorial: https://moderncss.dev/pure-css-custom-checkbox-style/ */
ul[data-type="taskList"] li > label {
  margin-right: 0.2rem;
  -webkit-user-select: none;
  user-select: none;
}

@media screen and (max-width: 768px) {
  ul[data-type="taskList"] li > label {
    margin-right: 0.5rem;
  }
}

ul[data-type="taskList"] li > label input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: hsl(var(--background));
  margin: 0;
  cursor: pointer;
  width: 1.2em;
  height: 1.2em;
  position: relative;
  top: 5px;
  border: 2px solid hsl(var(--border));
  margin-right: 0.3rem;
  display: grid;
  place-content: center;

  &:hover {
    background-color: hsl(var(--accent));
  }

  &:active {
    background-color: hsl(var(--accent));
  }

  &::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em;
    transform-origin: center;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  }

  &:checked::before {
    transform: scale(1);
  }
}

ul[data-type="taskList"] li[data-checked="true"] > div > p {
  color: var(--muted-foreground);
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

/* Overwrite tippy-box original max-width */
.tippy-box {
  max-width: 400px;
}

.ProseMirror:not(.dragging) .ProseMirror-selectednode {
  outline: none;
  background-color: var(--novel-highlight-blue);
  transition: background-color 0.2s;
  box-shadow: none;
}

/* Custom Youtube Video CSS */
iframe {
  border: 8px solid #ffd00027;
  border-radius: 4px;
  min-width: 200px;
  min-height: 200px;
  display: block;
  outline: 0px solid transparent;
}

div[data-youtube-video] > iframe {
  cursor: move;
  aspect-ratio: 16 / 9;
  width: 100%;
}

.ProseMirror-selectednode iframe {
  transition: outline 0.15s;
  outline: 6px solid #fbbf24;
}

@media only screen and (max-width: 480px) {
  div[data-youtube-video] > iframe {
    max-height: 50px;
  }
}

@media only screen and (max-width: 720px) {
  div[data-youtube-video] > iframe {
    max-height: 100px;
  }
}

/* CSS for bold coloring and highlighting issue*/
span[style] > strong {
  color: inherit;
}

mark[style] > strong {
  color: inherit;
}

/* Columns */
[data-type="columns"] {
  display: grid;
  gap: 1rem;
  margin-top: 3.5rem;
  margin-bottom: 3rem;

  &.layout-sidebar-left {
    grid-template-columns: 40fr 60fr;
  }

  &.layout-sidebar-right {
    grid-template-columns: 60fr 40fr;
  }

  &.layout-two-column {
    grid-template-columns: 1fr 1fr;
  }

  &.has-focus [data-type="column"],
  &:hover [data-type="column"] {
    border-color: rgb(212 212 212); /* neutral-300 */
  }

  [data-type="column"].has-focus {
    border-color: rgb(163 163 163); /* neutral-400 */
  }

  /* Hide placeholder on the columns container itself */
  &.is-empty::before,
  &.is-editor-empty::before {
    display: none !important;
  }

  /* Hide placeholders that are direct children of columns (they shouldn't exist) */
  & > .is-empty::before,
  & > .is-editor-empty::before,
  & > p.is-empty::before,
  & > p.is-editor-empty::before {
    display: none !important;
  }

  /* Completely hide any paragraph that's a direct child of columns */
  /* biome-ignore lint/style/noDescendingSpecificity: Specific override intentional for nested paragraph */
  & > p {
    display: none !important;
  }
}

/* biome-ignore lint/style/noDescendingSpecificity: Specific override intentional for nested paragraph */
[data-type="column"] {
  overflow: auto;
  border-radius: 0.25rem;
  border-width: 2px;
  border-style: dotted;
  border-color: rgb(64 64 64); /* neutral-700 */
  padding: 0.25rem;
  transition: border 160ms cubic-bezier(0.45, 0.05, 0.55, 0.95);

  /* biome-ignore lint/style/noDescendingSpecificity: Specific override intentional for nested element */
  &:hover {
    border-color: rgb(245 245 245); /* neutral-100 */
  }

  &:has(.is-active),
  &.has-focus {
    border-color: rgb(163 163 163); /* neutral-400 */
  }
}

@media (prefers-color-scheme: dark) {
  [data-type="columns"] {
    &.has-focus [data-type="column"],
    &:hover [data-type="column"] {
      border-color: rgb(64 64 64); /* neutral-700 */
    }

    [data-type="column"].has-focus {
      border-color: rgb(82 82 82); /* neutral-600 */
    }
  }

  /* biome-ignore lint/style/noDescendingSpecificity: Specific override intentional for nested element */
  [data-type="column"] {
    /* biome-ignore lint/style/noDescendingSpecificity: Specific override intentional for nested element */
    &:hover {
      border-color: rgb(23 23 23); /* neutral-900 */
    }

    &:has(.is-active),
    &.has-focus {
      border-color: rgb(82 82 82); /* neutral-600 */
    }
  }
}

.prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin: 0 !important;
}
/* codeblocks */

pre {
  background: #0d0d0d;
  color: #fff;
  font-family: "JetBrainsMono", monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;

  code {
    color: inherit;
    padding: 0;
    background: none;
    font-size: 0.8rem;
  }

  .hljs-comment,
  .hljs-quote {
    color: #616161;
  }

  .hljs-variable,
  .hljs-template-variable,
  .hljs-attribute,
  .hljs-tag,
  .hljs-name,
  .hljs-regexp,
  .hljs-link,
  .hljs-name,
  .hljs-selector-id,
  .hljs-selector-class {
    color: #f98181;
  }

  .hljs-number,
  .hljs-meta,
  .hljs-built_in,
  .hljs-builtin-name,
  .hljs-literal,
  .hljs-type,
  .hljs-params {
    color: #fbbc88;
  }

  .hljs-string,
  .hljs-symbol,
  .hljs-bullet {
    color: #b9f18d;
  }

  .hljs-title,
  .hljs-section {
    color: #faf594;
  }

  .hljs-keyword,
  .hljs-selector-tag {
    color: #70cff8;
  }

  .hljs-emphasis {
    font-style: italic;
  }

  .hljs-strong {
    font-weight: 700;
  }
}
