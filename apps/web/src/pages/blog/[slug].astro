---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Container from "@/components/Container.astro";
import Prose from "@/components/Prose.astro";
import BlogLayout from "@/layouts/BlogLayout.astro";
import { SITE } from "@/lib/constants";

export const prerender = true;

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.data.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const formattedDate = new Date(entry.data.publishedAt).toLocaleDateString(
  "en-US",
  {
    year: "numeric",
    month: "long",
    day: "numeric",
  }
);
---

<BlogLayout
  title={`${entry.data.title} - ${SITE.TITLE}`}
  description={entry.data.description}
  image={entry.data.coverImage}
>
  <section
    class='min-h-[calc(100vh-88px)] sm:min-h-[calc(100vh-103px)] lg:min-h-[calc(100vh-120px)] border-y border-dashed'
  >
    <div class="lg:border-x border-dashed md:w-[calc(100%-140px)] mx-auto h-full">
      <Container class="md:py-20 py-10 md:pb-24">
        <section class='max-w-3xl mx-auto mb-6 md:mb-10 space-y-6'>
          <div class='flex flex-col gap-4 text-center'>
            <h1 class='text-3xl lg:text-4xl text-balance leading-[1.2]'>
              {entry.data.title}
            </h1>
            <time datetime={entry.data.publishedAt.toISOString()} class="text-muted-foreground text-sm sm:text-base">Published on {formattedDate}</time>
          </div>
        </section>
        <div>
          {entry.data.coverImage && (
            <Image src={entry.data.coverImage} alt={entry.data.title} class="w-full max-w-3xl mx-auto mb-8" inferSize />
          )}
        </div>
        <Prose>
          <div set:html={entry.data.content} />
        </Prose>
      </Container>
    </div>
  </section>
</BlogLayout>
